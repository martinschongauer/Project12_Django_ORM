# Generated by Django 3.2.5 on 2023-03-28 08:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('First_name', models.CharField(max_length=25)),
                ('Last_name', models.CharField(max_length=25)),
                ('Email', models.CharField(max_length=100)),
                ('Phone', models.CharField(max_length=20)),
                ('Mobile', models.CharField(max_length=20)),
                ('Company_name', models.CharField(max_length=250)),
                ('Date_created', models.DateTimeField(auto_now_add=True)),
                ('Date_updated', models.DateTimeField(auto_now=True)),
                ('Client_known', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_created', models.DateTimeField(auto_now_add=True)),
                ('Date_updated', models.DateTimeField(auto_now=True)),
                ('Status', models.BooleanField()),
                ('Amount', models.FloatField()),
                ('Payment_Due', models.IntegerField(default=60, validators=[django.core.validators.MaxValueValidator(365), django.core.validators.MinValueValidator(1)])),
                ('Title', models.CharField(max_length=100)),
                ('Client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_contract', to='api.client')),
            ],
        ),
        migrations.CreateModel(
            name='SupportUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('support', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SalesUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seller_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ManagementUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manager_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Date_created', models.DateTimeField(auto_now_add=True)),
                ('Date_updated', models.DateTimeField(auto_now=True)),
                ('Event_Status', models.CharField(choices=[('1', 'Preparing'), ('2', 'Failure'), ('3', 'Postponed'), ('4', 'Success')], max_length=50)),
                ('Attendees', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(1000), django.core.validators.MinValueValidator(1)])),
                ('Event_Date', models.CharField(max_length=50)),
                ('Title', models.CharField(max_length=100)),
                ('Notes', models.CharField(max_length=10000)),
                ('Contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_client', to='api.contract')),
                ('Support_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_support_contact', to='api.supportuser')),
            ],
        ),
        migrations.AddField(
            model_name='contract',
            name='Sales_contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract_sales_contract', to='api.salesuser'),
        ),
        migrations.AddField(
            model_name='client',
            name='Sales_contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_sales_contact', to='api.salesuser'),
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.UniqueConstraint(fields=('Title', 'Contract'), name='event_unique'),
        ),
        migrations.AddConstraint(
            model_name='contract',
            constraint=models.UniqueConstraint(fields=('Title', 'Client'), name='contract_unique'),
        ),
        migrations.AddConstraint(
            model_name='client',
            constraint=models.UniqueConstraint(fields=('Email',), name='client_unique'),
        ),
    ]
